<!-- Zakir -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Skill Categories</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
</head>
<body>
    <header>
        <div class="navbar">
            <div class="navbar-left">
                <a href="/home"><img src="/img/G5.png" alt="Company Logo" class="logo"></a>
                <a href="/admin/all_staff"><button class="nav-button" aria-label="Navigate to staff management page">Staff</button></a>
                <a href="/admin/all_skills"><button class="nav-button" aria-label="Navigate to skills management page">Skills</button></a>
                <a href="/admin/all_skill_categories"><button class="nav-button active" aria-label="Navigate to skill categories page">Skill Categories</button></a>
                <a href="/admin/all_departments"><button class="nav-button" aria-label="Navigate to departments management page">Departments</button></a>
                <a href="/admin/all_job_roles"><button class="nav-button" aria-label="Navigate to job roles management page">Job Roles</button></a>
            </div>
        </div>
    </header>
    <div class="admin-content">
        <div class="staff-table-container">
            <table class="staff-table">
                <thead>
                    <tr>
                        <th></th>
                        <th>Category Name</th>
                        <th>Number of Skills</th>
                    </tr>
                </thead>
                <tbody>
                    <% categories.forEach(category => { %>
                        <tr>
                            <td><input type="radio" name="selectedCategory" value="<%= category.skill_category_id %>" data-categoryname="<%= category.skill_category_name %>" aria-label="Select <%= category.skill_category_name %> category"></td>
                            <td><%= category.skill_category_name %></td>
                            <td><%= category.skillCount %></td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
        <div class="action-buttons">
            <button id="viewSkillsBtn" class="blue-button" aria-label="View skills in selected category">View Skills</button>
            <button id="addCategoryBtn" class="green-button" aria-label="Add a new skill category">Add New Category</button>
            <button id="editCategoryBtn" class="purple-button" aria-label="Edit the selected skill category">Edit Selected Category</button>
            <button id="deleteCategoryBtn" class="red-button" aria-label="Delete a skill category">Delete Selected Category</button>
        </div>
    </div>
    <div id="addCategoryModal" class="modal" aria-hidden="true" role="dialog">
        <div class="modal-content">
            <span class="close" aria-label="Close Modal">&times;</span>
            <h2>Add New Skill Category</h2>
            <form id="addCategoryForm">
                <div class="form-group">
                    <label for="category_name">Category Name:</label>
                    <input type="text" id="category_name" name="category_name" required>
                </div>
                <button type="submit" class="submit-button">Add Category</button>
            </form>
        </div>
    </div>
    <div id="editCategoryModal" class="modal" aria-hidden="true" role="dialog">
        <div class="modal-content">
            <span class="close" aria-label="Close Modal">&times;</span>
            <h2>Edit Skill Category</h2>
            <form id="editCategoryForm">
                <input type="hidden" id="edit_category_id" name="skill_category_id">
                <div class="form-group">
                    <label for="edit_category_name">Category Name:</label>
                    <input type="text" id="edit_category_name" name="skill_category_name" required>
                </div>
                <button type="submit" class="submit-button">Save Changes</button>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addCategoryBtn = document.getElementById('addCategoryBtn');
            const editCategoryBtn = document.getElementById('editCategoryBtn');
            const deleteCategoryBtn = document.getElementById('deleteCategoryBtn');
            const viewSkillsBtn = document.getElementById('viewSkillsBtn');
            const addCategoryModal = document.getElementById('addCategoryModal');
            const editCategoryModal = document.getElementById('editCategoryModal');
            const closeBtns = document.getElementsByClassName('close');

            addCategoryBtn.onclick = () => {
                addCategoryModal.style.display = "block";
                addCategoryModal.setAttribute("aria-hidden", "false");
            };

            editCategoryBtn.onclick = () => {
                const selectedCategory = document.querySelector('input[name="selectedCategory"]:checked');
                if (!selectedCategory) {
                    alert("Please select a category to edit.");
                    return;
                }

                const categoryId = selectedCategory.value;
                const categoryName = selectedCategory.getAttribute('data-categoryname');

                document.getElementById('edit_category_id').value = categoryId;
                document.getElementById('edit_category_name').value = categoryName;

                editCategoryModal.style.display = "block";
                editCategoryModal.setAttribute("aria-hidden", "false");
            };

            deleteCategoryBtn.onclick = async () => {
                const selectedCategory = document.querySelector('input[name="selectedCategory"]:checked');
                if (!selectedCategory) {
                    alert("Please select a category to delete.");
                    return;
                }

                const confirmed = confirm("Are you sure you want to delete this category?");
                if (!confirmed) return;

                const categoryId = selectedCategory.value;

                try {
                    const response = await fetch(`/admin/all_skill_categories/delete_skill_category/${categoryId}`, {
                        method: 'DELETE',
                        headers: { 'Content-Type': 'application/json' },
                    });

                    if (response.ok) {
                        alert('Category deleted successfully');
                        location.reload();
                    } else {
                        alert('Failed to delete category');
                    }
                } catch (error) {
                    console.error('Error deleting category:', error);
                    alert('An error occurred. Please try again.');
                }
            };

            viewSkillsBtn.onclick = () => {
                const selectedCategory = document.querySelector('input[name="selectedCategory"]:checked');
                if (!selectedCategory) {
                    alert("Please select a category to view skills.");
                    return;
                }

                const categoryId = selectedCategory.value;
                window.location.href = `/admin/all_skill_categories/view_skills_by_category/${categoryId}`;
            };

            Array.from(closeBtns).forEach(btn => {
                btn.onclick = () => {
                    addCategoryModal.style.display = "none";
                    editCategoryModal.style.display = "none";
                    addCategoryModal.setAttribute("aria-hidden", "true");
                    editCategoryModal.setAttribute("aria-hidden", "true");
                };
            });

            document.getElementById('addCategoryForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                const categoryName = document.getElementById('category_name').value;

                try {
                    const response = await fetch('/admin/all_skill_categories/add_skill_category', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ skill_category_name: categoryName }),
                    });

                    if (response.ok) {
                        alert('Category added successfully');
                        location.reload();
                    } else {
                        alert('Failed to add category');
                    }
                } catch (error) {
                    console.error('Error adding category:', error);
                    alert('An error occurred. Please try again.');
                }
            });

            document.getElementById('editCategoryForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                const categoryId = document.getElementById('edit_category_id').value;
                const categoryName = document.getElementById('edit_category_name').value;

                try {
                    const response = await fetch(`/admin/all_skill_categories/edit_skill_category/${categoryId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ skill_category_id: categoryId, skill_category_name: categoryName }),
                    });

                    if (response.ok) {
                        alert('Category updated successfully');
                        location.reload();
                    } else {
                        alert('Failed to update category');
                    }
                } catch (error) {
                    console.error('Error updating category:', error);
                    alert('An error occurred. Please try again.');
                }
            });
        });
    </script>
</body>
</html>
