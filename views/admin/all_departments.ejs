<!-- Zakir -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Departments</title>
    <link rel="stylesheet" href="/stylesheets/style.css">
</head>
<body>
    <header>
        <div class="navbar">
            <div class="navbar-left">
                <a href="/home"><img src="/img/G5.png" alt="Company Logo" class="logo"></a>
                <a href="/admin/all_staff"><button class="nav-button" aria-label="Go to staff management page">Staff</button></a>
                <a href="/admin/all_skills"><button class="nav-button" aria-label="Go to skills management page">Skills</button></a>
                <a href="/admin/all_skill_categories">
                    <button class="nav-button" aria-label="Navigate to skill categories page">Skill Categories</button>
                </a>
                <a href="/admin/all_departments"><button class="nav-button active" aria-label="Go to departments management page">Departments</button></a>
                <a href="/admin/all_job_roles"><button class="nav-button">Job Roles</button></a>
            </div>
            <div class="navbar-right">
                <form action="/logout" method="POST" style="display:inline;">
                    <button type="submit" class="logout-button" aria-label="Log out from the system">Log out</button>
                </form>
            </div>
        </div>
    </header>
    <div class="admin-content">
        <div class="staff-table-container">
            <table class="staff-table">
                <thead>
                    <tr>
                        <th></th>
                        <th>Department Name</th>
                        <th>Number of Users</th>
                    </tr>
                </thead>
                <tbody>
                    <% departments.forEach(department => { %>
                        <tr>
                            <td>
                                <input type="radio" name="selectedDepartment" value="<%= department.department_id %>" data-departmentname="<%= department.department_name %>" aria-label="Select <%= department.department_name %> department">
                            </td>
                            <td><%= department.department_name %></td>
                            <td><%= department.userCount %></td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
        <div class="action-buttons">
            <button id="viewStaffBtn" class="blue-button" aria-label="View staff in the selected department">View Staff</button>
            <button id="addDepartmentBtn" class="green-button" aria-label="Add a new department">Add New Department</button>
            <button id="editDepartmentBtn" class="purple-button" aria-label="Edit a department">Edit Selected Department</button>
            <button id="deleteDepartmentBtn" class="red-button" aria-label="Delete a department">Delete Selected Department</button>
        </div>
    </div>
    <div id="addDepartmentModal" class="modal" aria-hidden="true" role="dialog" aria-labelledby="addDepartmentTitle">
        <div class="modal-content">
            <span class="close" aria-label="Close Modal">&times;</span>
            <h2 id="addDepartmentTitle">Add New Department</h2>
            <form id="addDepartmentForm">
                <div class="form-group">
                    <label for="department_name">Department Name:</label>
                    <input type="text" id="department_name" name="department_name" required aria-required="true">
                </div>
                <button type="submit" class="submit-button">Add Department</button>
            </form>
        </div>
    </div>
    <div id="editDepartmentModal" class="modal" aria-hidden="true" role="dialog" aria-labelledby="editDepartmentTitle">
        <div class="modal-content">
            <span class="close" aria-label="Close Modal">&times;</span>
            <h2 id="editDepartmentTitle">Edit Department</h2>
            <form id="editDepartmentForm">
                <input type="hidden" id="edit_department_id" name="department_id">
                <div class="form-group">
                    <label for="edit_department_name">Department Name:</label>
                    <input type="text" id="edit_department_name" name="department_name" required aria-required="true">
                </div>
                <button type="submit" class="submit-button">Save Changes</button>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const viewStaffBtn = document.getElementById('viewStaffBtn');
            const addDepartmentBtn = document.getElementById('addDepartmentBtn');
            const editDepartmentBtn = document.getElementById('editDepartmentBtn');
            const deleteDepartmentBtn = document.getElementById('deleteDepartmentBtn');
            const addDepartmentModal = document.getElementById('addDepartmentModal');
            const editDepartmentModal = document.getElementById('editDepartmentModal');
            const closeBtns = document.getElementsByClassName('close');

            viewStaffBtn.onclick = () => {
                const selectedDepartment = document.querySelector('input[name="selectedDepartment"]:checked');
                if (!selectedDepartment) {
                    alert("Please select a department.");
                    return;
                }
                const departmentId = selectedDepartment.value;
                window.location.href = `/admin/view_staff_by_department/${departmentId}/staff`;
            };

            addDepartmentBtn.onclick = () => {
                addDepartmentModal.style.display = "block";
                addDepartmentModal.setAttribute("aria-hidden", "false");
            };

            editDepartmentBtn.onclick = () => {
                const selectedDepartment = document.querySelector('input[name="selectedDepartment"]:checked');
                if (!selectedDepartment) {
                    alert("Please select a department to edit.");
                    return;
                }

                const departmentId = selectedDepartment.value;
                const departmentName = selectedDepartment.getAttribute('data-departmentname');

                document.getElementById('edit_department_id').value = departmentId;
                document.getElementById('edit_department_name').value = departmentName;

                editDepartmentModal.style.display = "block";
                editDepartmentModal.setAttribute("aria-hidden", "false");
            };

            deleteDepartmentBtn.onclick = async () => {
                const selectedDepartment = document.querySelector('input[name="selectedDepartment"]:checked');
                if (!selectedDepartment) {
                    alert("Please select a department to delete.");
                    return;
                }

                const confirmed = confirm("Are you sure you want to delete this department?");
                if (!confirmed) return;

                const departmentId = selectedDepartment.value;

                try {
                    const response = await fetch(`/admin/delete_department`, {
                        method: 'DELETE',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ department_id: departmentId })
                    });

                    if (response.ok) {
                        alert('Department deleted successfully');
                        location.reload();
                    } else {
                        alert('Failed to delete department');
                    }
                } catch (error) {
                    console.error('Error deleting department:', error);
                    alert('An error occurred. Please try again.');
                }
            };

            Array.from(closeBtns).forEach(btn => {
                btn.onclick = () => {
                    addDepartmentModal.style.display = "none";
                    editDepartmentModal.style.display = "none";
                    addDepartmentModal.setAttribute("aria-hidden", "true");
                    editDepartmentModal.setAttribute("aria-hidden", "true");
                };
            });

            document.getElementById('addDepartmentForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                const departmentName = document.getElementById('department_name').value;

                const formData = { department_name: departmentName };

                try {
                    const response = await fetch('/admin/add_department', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(formData),
                    });

                    if (response.ok) {
                        alert('Department added successfully');
                        location.reload();
                    } else {
                        alert('Failed to add department');
                    }
                } catch (error) {
                    console.error('Error adding department:', error);
                    alert('An error occurred. Please try again.');
                }
            });

            document.getElementById('editDepartmentForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                const departmentId = document.getElementById('edit_department_id').value;
                const departmentName = document.getElementById('edit_department_name').value;

                const formData = {
                    department_id: departmentId,
                    department_name: departmentName
                };

                try {
                    const response = await fetch(`/admin/edit_department/${departmentId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(formData),
                    });

                    if (response.ok) {
                        alert('Department updated successfully');
                        location.reload();
                    } else {
                        alert('Failed to update department');
                    }
                } catch (error) {
                    console.error('Error updating department:', error);
                    alert('An error occurred. Please try again.');
                }
            });
        });
    </script>
</body>
</html>
